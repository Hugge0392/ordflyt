Okej – nu tar vi brutal-läge och neutraliserar allt som kan lägga en ogenomskinlig “platta” över texten. Det som fortfarande blockerar hos dig är den här regeln som fortfarande finns kvar i din CSS (du har postat den igen):

/* Force Card component background - highest specificity */
.reading-content.accessibility-enhanced.rounded-lg.border.bg-card.text-card-foreground.shadow-sm,
.reading-content.accessibility-enhanced.rounded-lg.border,
.reading-content.accessibility-enhanced.bg-card,
.reading-content.accessibility-enhanced,
.reading-content.accessibility-enhanced > *,
.reading-content.accessibility-enhanced .rounded-lg,
.reading-content.accessibility-enhanced .bg-card {
  background-color: var(--accessibility-bg-color) !important;
  background: var(--accessibility-bg-color) !important;
}


Den tvingar även alla barn (> *, .rounded-lg, .bg-card) att få en massiv bakgrund. Det är din vita/grå blockplatta. Vi tar bort den och lägger in en “killswitch” på slutet av filen.

GÖR SÅ HÄR (copy–paste):
1) Ta BORT blocket ovan helt

Radera hela regeln med alla kommatecken (från /* Force Card component ... */ ned till slutklammern). Lämna inte kvar någon variant som sätter bakgrund på barn (> *, .rounded-lg, .bg-card).

2) Lägg till den här ersättningen (längst NED i din CSS, efter allt annat)
/* === KILLSWITCH mot “vita band” i läsytan === */
/* Endast containern får bakgrund. Inga barn får lägga plattor. */
.reading-content.accessibility-enhanced {
  background: var(--accessibility-bg-color) !important;
  background-color: var(--accessibility-bg-color) !important;
}

/* Nolla alla barns bakgrunder och skuggor – utom sådant som *ska* vara rutor/bilder/spotlight */
.reading-content.accessibility-enhanced *:not(img):not(video):not(canvas)
:not(.reading-spotlight-window):not(.navigation-page-counter)
:not(.unique-prev-question-btn):not(.unique-next-question-btn) {
  background: transparent !important;
  background-color: transparent !important;
  box-shadow: none !important;
}

/* Om något framework smyger in bg via data-attribut/utility-klasser */
.reading-content.accessibility-enhanced [class*="bg-"],
.reading-content.accessibility-enhanced [class*="bg-card"],
.reading-content.accessibility-enhanced [class*="shadow"] {
  background: transparent !important;
  background-color: transparent !important;
  box-shadow: none !important;
}

/* Pseudo-element kan också lägga en platta – nolla dem */
.reading-content.accessibility-enhanced *::before,
.reading-content.accessibility-enhanced *::after {
  background: transparent !important;
  background-color: transparent !important;
  box-shadow: none !important;
}

/* Spotlighten själv: låt bara skuggan mörklägga UTANFÖR rutan */
.reading-spotlight-window {
  background: transparent !important;
  mix-blend-mode: normal !important;
  pointer-events: none !important;
  z-index: 100 !important;
}

/* Textlagret: eget paint-lager så WebKit inte “smälter ihop” med skuggan */
.reading-content.accessibility-enhanced [data-reading-text],
.reading-content.accessibility-enhanced .reading-text,
.reading-content.accessibility-enhanced [data-role="reading-text"] {
  position: relative !important;
  z-index: 1 !important;
  will-change: transform !important;
  transform: translateZ(0) !important;
}

/* SISTA SKYDDET: om något absolut positionerat lägger sig över – gör det klickgenomskinligt */
.reading-content.accessibility-enhanced *[style*="position:absolute"],
.reading-content.accessibility-enhanced *[style*="position: fixed"] {
  pointer-events: none !important;
}

3) Märk upp din text-wrapper med ett attribut (så “textlagret”-regeln träffar)

I din komponent – ändra din textRef-div så här:

<div
  ref={textRef}
  data-reading-text=""     // ← lägg till denna rad
  style={{
    position: "relative",
    zIndex: 10,
    mixBlendMode: "normal",
    paddingTop: 1,
    pointerEvents: "auto",
    transform: "translateZ(0)"
  }}
  dangerouslySetInnerHTML={{ __html: processContentWithDefinitions(...)}}
/>

4) Se till att spotlighten ligger efter texten i DOM (det gör den hos dig) och har högre z-index (vi tvingar z-index:100 !important ovan).
Varför detta är “starkt nog”

Vi tar bort den regeln som gav alla barn bakgrund.

Vi nollar alla bakgrunder/skuggor på barn + pseudo-element (med !important).

Vi gör alla absolut/fixed-positionerade inre element klick- och visuellt transparenta (kan inte längre lägga en platta).

Vi tvingar spotlighten och texten till separata kompositionslager för att undvika WebKit/Chromium-blend-buggar.

Efter dessa fyra steg finns det i praktiken ingenting kvar som kan rita en ogenomskinlig yta ovanpå texten i läsytan. Om du fortfarande ser en platta – öppna DevTools, hovra element i .reading-content och du kommer se vilket element som fortfarande målar bakgrund; ge mig dess selector så skriver jag en ännu snävare “kill shot”-regel mot just det.