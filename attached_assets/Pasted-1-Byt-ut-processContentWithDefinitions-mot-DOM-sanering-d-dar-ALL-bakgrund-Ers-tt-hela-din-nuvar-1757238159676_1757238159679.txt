1) Byt ut processContentWithDefinitions mot DOM-sanering (dödar ALL bakgrund)

Ersätt hela din nuvarande processContentWithDefinitions med denna version:

// ==== REPLACE WHOLE FUNCTION ====
const processContentWithDefinitions = (
  content: string,
  definitions: WordDefinition[] = [],
) => {
  // 0) Bygg DOM och SANERA inline-stilar robust (alla färger, rgba/hsl/gradients, box-shadow, filter)
  const tmp = document.createElement("div");
  tmp.innerHTML = content;

  // Ta bort element som kan skapa plattor/fält
  tmp.querySelectorAll("hr,[role='separator'],.ql-divider,.divider,input,button,textarea").forEach(el => el.remove());

  // Rensa ALL bakgrund/skyggor/blends i inline-stilar
  tmp.querySelectorAll<HTMLElement>("[style]").forEach((el) => {
    const style = el.getAttribute("style") || "";

    // Plocka bort allt som kan ge platta/film/skugga
    const cleaned = style
      .replace(/\bbackground(?:-image|-color)?\s*:[^;"]*;?/gi, "")
      .replace(/\bbackground\s*:[^;"]*;?/gi, "")
      .replace(/\bbox-shadow\s*:[^;"]*;?/gi, "")
      .replace(/\bfilter\s*:[^;"]*;?/gi, "")
      .replace(/\bbackdrop-filter\s*:[^;"]*;?/gi, "")
      .replace(/\bmix-blend-mode\s*:[^;"]*;?/gi, "");

    if (cleaned.trim()) el.setAttribute("style", cleaned);
    else el.removeAttribute("style");
  });

  // (Valfritt) rensa klassnamn som brukar vara vita
  tmp.querySelectorAll<HTMLElement>("[class]").forEach((el) => {
    el.className = el.className
      .split(/\s+/)
      .filter((c) => !/^bg(-|$)/.test(c) && !/^(ql-)?bg-white$/.test(c))
      .join(" ");
  });

  // 1) Ordförklaringar
  if (definitions?.length) {
    const html = tmp.innerHTML;
    let processedContent = html;
    definitions.forEach(({ word, definition }) => {
      const regex = new RegExp(`\\b(${word.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")})\\b`, "gi");
      processedContent = processedContent.replace(
        regex,
        `<span class="defined-word" data-word="${word}" data-definition="${definition}">$1</span>`
      );
    });
    return processedContent;
  }

  return tmp.innerHTML;
};

2) Lägg en sista-utväg-regel inne i din inline <style> i komponenten

I din <style>{…}</style> inne i .reading-content – lägg till detta block (behåll allt annat, bara lägg till):

/* Killswitch mot ALL inline-bakgrund & skuggor från editorn – oavsett färg/format */
.reading-content [style*="background"],
.reading-content [style*="background-color"],
.reading-content [style*="background-image"],
.reading-content [style*="box-shadow"],
.reading-content [style*="filter"],
.reading-content [style*="backdrop-filter"],
.reading-content [style*="mix-blend-mode"] {
  background: transparent !important;
  background-color: transparent !important;
  background-image: none !important;
  box-shadow: none !important;
  filter: none !important;
  backdrop-filter: none !important;
  mix-blend-mode: normal !important;
}


Det här fångar alla varianter som kan ha smugit förbi (t.ex. rgba(255,255,255,1), hsl(0 0% 100%), gradients osv).

3) Hårdare spotlight-prioritet (bara ifall något ändå lägger sig över)

Du har redan höjt, men gör den helt odiskutabel:

.reading-spotlight-window {
  position: absolute;
  pointer-events: none !important;
  z-index: 2147483647 !important; /* högsta praktiskt rimliga */
  background: transparent !important;
  mix-blend-mode: normal !important;
}
.reading-content.accessibility-enhanced { isolation: isolate !important; }

Varför det här löser ditt screenshot-fall

Den vita horisontella rutan är ett element i själva lästexten (ofta ett tomt p/div) som har style="background: #fff" eller liknande. Din tidigare regex och selektiva CSS träffade inte alla representationer → rutan levde kvar.

Med DOM-saneringen (steg 1) tas allt sånt bort innan det ens landar i DOM. Med inline-style-killswitchen (steg 2) finns ett extra nät som neutraliserar allt som ändå skulle smita igenom. Spotlighten (steg 3) står överst oavsett.

Kör detta, bygg om, och du ska kunna läsa texten i fokusfönstret utan den vita plankan. Om någon rest ändå syns: säg bara vilket element DevTools pekar ut (tagg + klass), så ger jag en minimal extra regel för just den.