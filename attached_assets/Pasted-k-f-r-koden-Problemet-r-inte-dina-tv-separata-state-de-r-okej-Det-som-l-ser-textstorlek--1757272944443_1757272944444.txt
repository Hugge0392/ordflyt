k f√∂r koden! üôå Problemet √§r inte dina tv√• separata state ‚Äì de √§r okej. Det som ‚Äúl√•ser‚Äù textstorlek/radavst√•nd √§r att editor-inneh√•llet har egna inline-stilar (t.ex. style="font-size: 16px" och/eller line-height) som vinner √∂ver dina variabler. F√§rg funkar eftersom du redan forcerar den med !important, men storlek/radavst√•nd g√∂r du inte.

Fixa det p√• tv√• s√§tt (du kan g√∂ra b√•da f√∂r att vara s√§ker):

A) √ñverstyr inline-stilar i CSS (snabbast)

L√§gg till dessa rader i den lilla <style>-blocket i din reading-content (precis d√§r du redan s√§tter f√§rg). Det g√∂r att allt under din wrapper √§rver storlek och radavst√•nd fr√•n data-reading-text och ignorerar editor-inline-stilar.

<style>{`
  /* ... dina befintliga regler ... */

  /* 1) S√§tt basen p√• sj√§lva text-wrappen (du s√§tter ocks√• inline style p√• div:en ‚Äì b√•da √§r ok) */
  .reading-content [data-reading-text] {
    font-size: ${readingFocusMode ? "var(--focus-font-size)" : "var(--normal-font-size)"} !important;
    line-height: ${readingFocusMode ? "var(--focus-line-height)" : "var(--normal-line-height)"} !important;
  }

  /* 2) Tvinga alla barn att √§rva detta (√∂verk√∂r editorns inline-stilar) */
  .reading-content [data-reading-text] * {
    font-size: inherit !important;
    line-height: inherit !important;
  }
`}</style>


Du kan beh√•lla dina inline style={{ fontSize: ..., lineHeight: ... }} p√• textRef ‚Äì de och reglerna ovan s√§ger samma sak och skadar inte. Viktigt √§r !important + inherit p√• barnen.

B) Rensa bort font-size/line-height fr√•n editor-HTML (komplement)

I din processContentWithDefinitions tar du redan bort bakgrundsf√§rger. L√§gg till rensning av font-size och line-height i inline-style:

// b) Ta bort inline vita bakgrunder ... + rensa font-size/line-height
processedContent = processedContent
  // befintlig bakgrundsrensning:
  .replace(
    /\sstyle=(["'])(?:(?!\1).)*(background(?:-color)?\s*:\s*(?:#fff(?:fff)?|white|rgb\s*\(\s*255\s*,\s*255\s*,\s*255\s*\))(?:[^;>]*)?);?(?:(?!\1).)*\1/gi,
    (m) => m.replace(/background(?:-color)?\s*:[^;>]+;?/gi, "")
  )
  // üîΩ rensa font-size & line-height ur style-attribut
  .replace(
    /\sstyle=(["'])(?:(?!\1).)*\1/gi,
    (m) =>
      m
        .replace(/font-size\s*:\s*[^;>]+;?/gi, "")
        .replace(/line-height\s*:\s*[^;>]+;?/gi, "")
        // ta bort tomma style-attribut
        .replace(/\sstyle=(["'])\s*\1/gi, "")
  );


Det h√§r g√∂r att √§ven om n√•gon tag i inneh√•llet hade egna typografiska stilar s√• f√∂rsvinner de, och dina sliders styr allt.

Liten sanity-check

Du s√§tter CSS-variablerna korrekt i useEffect (b√•de --normal-* och --focus-*).

textRef anv√§nder var(--normal-*/--focus-*) ‚Äì bra.

Sliders √§ndrar activeSettings ‚Üí variabler uppdateras ‚Üí DOM re-m√§ts (du har redan dependencies p√• activeSettings).

Med A) (och g√§rna B)) kommer textstorlek och radavst√•nd b√∂rja reagera direkt p√• reglagen, i b√•da l√§gen. S√§g till om du vill att rubriker ska kunna ha egen skala (t.ex. H1 = 1.3√ó basen) ‚Äì d√• kan vi l√§gga in CSS som multiplicerar font-size proportionellt ist√§llet f√∂r att helt platta ut allt.